version: '3.3'

services:

  db:
    image: postgres:latest
    volumes:
      - postgres_valume:/var/lib/postgresql/data/
    env_file:
      - ./.env
    ports:
      - "5432:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 40s

  redis:
    image: redis:latest

  web:
    build: ../check_code
    command: gunicorn check_code.wsgi:application --bind 0.0.0.0:8000
    volumes:
      - static_volume:/backend/staticfiles
      - media_volume:/backend/mediafiles
    depends_on:
      - db
      - redis
    env_file:
      - ./.env
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://127.0.0.1:8000/admin"]
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 40s

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - static_volume:/backend/staticfiles
      - media_volume:/backend/mediafiles
    depends_on:
      - web
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://127.0.0.1/"]
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 40s
  celery:
    build: ../check_tasks
    command: celery -A tasks worker -B -l INFO
    volumes:
      - .:/code
    depends_on:
      - web
      - redis
    env_file:
      - ./.env

volumes:
  static_volume:
  media_volume:
  postgres_valume:
